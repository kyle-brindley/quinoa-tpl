################################################################################
# vim: filetype=dockerfile:
#
# \file      docker/alpine
# \copyright 2012-2015 J. Bakosi,
#            2016-2018 Los Alamos National Security, LLC.,
#            2019-2021 Triad National Security, LLC.
#            All rights reserved. See the LICENSE file for details.
# \brief     Dockerfile for testing the third-party libraries build for Quinoa
# \details   Starting from an alpine distribution, we install the
#            absolute minimum system-wide packages that allow building all
#            third-party libraries.
#
################################################################################

FROM alpine:3.10

ARG COMMIT
ARG ENABLE_AMPI

RUN apk update && apk add autoconf automake libtool bash grep m4 perl zlib-dev git cmake make gfortran gcc g++ libexecinfo-dev patch python flex bison

ADD http://www.open-mpi.org/software/ompi/v3.1/downloads/openmpi-3.1.4.tar.gz /openmpi/
RUN if [ "$ENABLE_AMPI" = false ]; then cd /openmpi/ && tar xzf openmpi-3.1.4.tar.gz && cd openmpi-3.1.4 && ./configure --prefix=/opt/openmpi && make -sj$(grep -c processor /proc/cpuinfo) install ; fi
ENV PATH /opt/openmpi/bin:$PATH
ENV LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH
RUN rm -rf /openmpi

# Create symbolic link to /lib/cpp for the charm++ build, see
# https://lists.cs.illinois.edu/lists/arc/charm/2016-05/msg00013.html
RUN ln -s /usr/bin/cpp /lib/cpp

RUN addgroup quinoa && adduser -S quinoa quinoa && chown -R quinoa:quinoa /home/quinoa
USER quinoa
WORKDIR /home/quinoa

RUN git clone --recursive http://github.com/quinoacomputing/quinoa-tpl.git
RUN cd quinoa-tpl && git checkout $COMMIT && git submodule init && git submodule update --recursive && git submodule status --recursive && mkdir -p build && cd build && cmake -DENABLE_AMPI=$ENABLE_AMPI .. && make -sj$(grep -c processor /proc/cpuinfo)
